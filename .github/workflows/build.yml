name: Build project

on:
  workflow_call:
    inputs:
      build-project:
        type: boolean
      test-project:
        type: boolean
      build-docs:
        type: boolean
      upload-output:
        type: boolean
      fast:
        type: boolean

jobs:
  prepare-build-matrix:
    name: Prepare build matrix
    runs-on: ubuntu-latest
    steps:
      - name: Create build matrix
        id: create-build-matrix
        env:
          DEFAULT_MATRIX: '
            {
              "os": [
                "ubuntu-latest",
                "windows-latest"
              ]
            }
            '
          FAST_MATRIX: '
            {
              "os": [
                "ubuntu-latest"
              ]
            }
            '
        run: |
          if [ "${{ inputs.fast }}" = true ]; then
            echo "BUILD_MATRIX=$FAST_MATRIX" >> $GITHUB_OUTPUT
          else
            echo "BUILD_MATRIX=$DEFAULT_MATRIX" >> $GITHUB_OUTPUT
          fi
    outputs:
      build-matrix: ${{ steps.create-build-matrix.outputs.BUILD_MATRIX }}

  build:
    name: Build project
    strategy:
      matrix: ${{ fromJson(needs.prepare-build-matrix.outputs.build-matrix) }}
    runs-on: ${{ matrix.os }}
    needs: prepare-build-matrix
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v2.1.3
      - name: JDK setup
        uses: actions/setup-java@v4.2.1
        with:
          java-version: 17
          distribution: temurin
      - name: Build project
        if: inputs.build-project
        run: ./gradlew build -x test
      - name: Test project
        if: inputs.test-project
        run: ./gradlew test
      - name: Build documentation
        if: inputs.build-docs
        run: ./gradlew dokkaHtml
      - name: Build documentation (Java syntax)
        if: inputs.build-docs
        run: ./gradlew dokkaHtml -PjavaSyntax
      - name: Upload Fabric jars
        if: inputs.build-project && inputs.upload-output
        uses: actions/upload-artifact@v4.3.1
        with:
          name: fabric-jars
          path: |
            FabricMod/build/libs/*.jar
          if-no-files-found: error
      - name: Upload NeoForge jars
        if: inputs.build-project && inputs.upload-output
        uses: actions/upload-artifact@v4.3.1
        with:
          name: neoforge-jars
          path: |
            NeoForgeMod/build/libs/*.jar
          if-no-files-found: error
      - name: Upload Forge jars
        if: inputs.build-project && inputs.upload-output
        uses: actions/upload-artifact@v4.3.1
        with:
          name: forge-jars
          path: |
            ForgeMod/build/libs/*.jar
          if-no-files-found: error
      - name: Upload documentation output
        if: inputs.build-docs && inputs.upload-output
        uses: actions/upload-artifact@v4.3.1
        with:
          name: kdoc
          path: StaffMod/build/docs/kotlinHtml
          if-no-files-found: error
      - name: Upload documentation output (Java syntax)
        if: inputs.build-docs && inputs.upload-output
        uses: actions/upload-artifact@v4.3.1
        with:
          name: javadoc
          path: StaffMod/build/docs/javaHtml
          if-no-files-found: error
